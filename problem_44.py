#!/usr/bin/env python
# -*- coding: utf-8 -*-
from euler import *
problem = Problem(
	id = 44,
	name = "Pentagon numbers",
	description = \
"""Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten pentagonal numbers are:

    1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 - 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk - Pj| is minimised; what is the value of D?"""
	)

class BreakOutOfLoop(Exception): pass

with setup(problem):
	Pj, Pk, D = -1, -1, 1 << 32
	try:
		for i, P in enumerate(pentagonals(1), start=1):
			for p in pentagonals_first(i, start=1):
				sum = p + P
				delta = abs(P - p)
				if is_pentagonal(sum) and \
					is_pentagonal(delta) and \
					delta < D:
					D = delta
					Pj, Pk = p, P
					problem.answer = "{0} (Pj: {1} Pk: {2})".format(D, Pj, Pk)
					raise BreakOutOfLoop
	except BreakOutOfLoop:
		pass
	#problem.answer = None